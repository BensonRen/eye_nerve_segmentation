Making network now
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1         [-1, 64, 224, 224]           1,792
              ReLU-2         [-1, 64, 224, 224]               0
            Conv2d-3         [-1, 64, 224, 224]          36,928
              ReLU-4         [-1, 64, 224, 224]               0
            Conv2d-5         [-1, 64, 112, 112]           9,408
            Conv2d-6         [-1, 64, 112, 112]           9,408
       BatchNorm2d-7         [-1, 64, 112, 112]             128
       BatchNorm2d-8         [-1, 64, 112, 112]             128
              ReLU-9         [-1, 64, 112, 112]               0
             ReLU-10         [-1, 64, 112, 112]               0
        MaxPool2d-11           [-1, 64, 56, 56]               0
        MaxPool2d-12           [-1, 64, 56, 56]               0
           Conv2d-13           [-1, 64, 56, 56]          36,864
           Conv2d-14           [-1, 64, 56, 56]          36,864
      BatchNorm2d-15           [-1, 64, 56, 56]             128
      BatchNorm2d-16           [-1, 64, 56, 56]             128
             ReLU-17           [-1, 64, 56, 56]               0
             ReLU-18           [-1, 64, 56, 56]               0
           Conv2d-19           [-1, 64, 56, 56]          36,864
           Conv2d-20           [-1, 64, 56, 56]          36,864
      BatchNorm2d-21           [-1, 64, 56, 56]             128
      BatchNorm2d-22           [-1, 64, 56, 56]             128
             ReLU-23           [-1, 64, 56, 56]               0
             ReLU-24           [-1, 64, 56, 56]               0
       BasicBlock-25           [-1, 64, 56, 56]               0
       BasicBlock-26           [-1, 64, 56, 56]               0
           Conv2d-27           [-1, 64, 56, 56]          36,864
           Conv2d-28           [-1, 64, 56, 56]          36,864
      BatchNorm2d-29           [-1, 64, 56, 56]             128
      BatchNorm2d-30           [-1, 64, 56, 56]             128
             ReLU-31           [-1, 64, 56, 56]               0
             ReLU-32           [-1, 64, 56, 56]               0
           Conv2d-33           [-1, 64, 56, 56]          36,864
           Conv2d-34           [-1, 64, 56, 56]          36,864
      BatchNorm2d-35           [-1, 64, 56, 56]             128
      BatchNorm2d-36           [-1, 64, 56, 56]             128
             ReLU-37           [-1, 64, 56, 56]               0
             ReLU-38           [-1, 64, 56, 56]               0
       BasicBlock-39           [-1, 64, 56, 56]               0
       BasicBlock-40           [-1, 64, 56, 56]               0
           Conv2d-41          [-1, 128, 28, 28]          73,728
           Conv2d-42          [-1, 128, 28, 28]          73,728
      BatchNorm2d-43          [-1, 128, 28, 28]             256
      BatchNorm2d-44          [-1, 128, 28, 28]             256
             ReLU-45          [-1, 128, 28, 28]               0
             ReLU-46          [-1, 128, 28, 28]               0
           Conv2d-47          [-1, 128, 28, 28]         147,456
           Conv2d-48          [-1, 128, 28, 28]         147,456
      BatchNorm2d-49          [-1, 128, 28, 28]             256
      BatchNorm2d-50          [-1, 128, 28, 28]             256
           Conv2d-51          [-1, 128, 28, 28]           8,192
           Conv2d-52          [-1, 128, 28, 28]           8,192
      BatchNorm2d-53          [-1, 128, 28, 28]             256
      BatchNorm2d-54          [-1, 128, 28, 28]             256
             ReLU-55          [-1, 128, 28, 28]               0
             ReLU-56          [-1, 128, 28, 28]               0
       BasicBlock-57          [-1, 128, 28, 28]               0
       BasicBlock-58          [-1, 128, 28, 28]               0
           Conv2d-59          [-1, 128, 28, 28]         147,456
           Conv2d-60          [-1, 128, 28, 28]         147,456
      BatchNorm2d-61          [-1, 128, 28, 28]             256
      BatchNorm2d-62          [-1, 128, 28, 28]             256
             ReLU-63          [-1, 128, 28, 28]               0
             ReLU-64          [-1, 128, 28, 28]               0
           Conv2d-65          [-1, 128, 28, 28]         147,456
           Conv2d-66          [-1, 128, 28, 28]         147,456
      BatchNorm2d-67          [-1, 128, 28, 28]             256
      BatchNorm2d-68          [-1, 128, 28, 28]             256
             ReLU-69          [-1, 128, 28, 28]               0
             ReLU-70          [-1, 128, 28, 28]               0
       BasicBlock-71          [-1, 128, 28, 28]               0
       BasicBlock-72          [-1, 128, 28, 28]               0
           Conv2d-73          [-1, 256, 14, 14]         294,912
           Conv2d-74          [-1, 256, 14, 14]         294,912
      BatchNorm2d-75          [-1, 256, 14, 14]             512
      BatchNorm2d-76          [-1, 256, 14, 14]             512
             ReLU-77          [-1, 256, 14, 14]               0
             ReLU-78          [-1, 256, 14, 14]               0
           Conv2d-79          [-1, 256, 14, 14]         589,824
           Conv2d-80          [-1, 256, 14, 14]         589,824
      BatchNorm2d-81          [-1, 256, 14, 14]             512
      BatchNorm2d-82          [-1, 256, 14, 14]             512
           Conv2d-83          [-1, 256, 14, 14]          32,768
           Conv2d-84          [-1, 256, 14, 14]          32,768
      BatchNorm2d-85          [-1, 256, 14, 14]             512
      BatchNorm2d-86          [-1, 256, 14, 14]             512
             ReLU-87          [-1, 256, 14, 14]               0
             ReLU-88          [-1, 256, 14, 14]               0
       BasicBlock-89          [-1, 256, 14, 14]               0
       BasicBlock-90          [-1, 256, 14, 14]               0
           Conv2d-91          [-1, 256, 14, 14]         589,824
           Conv2d-92          [-1, 256, 14, 14]         589,824
      BatchNorm2d-93          [-1, 256, 14, 14]             512
      BatchNorm2d-94          [-1, 256, 14, 14]             512
             ReLU-95          [-1, 256, 14, 14]               0
             ReLU-96          [-1, 256, 14, 14]               0
           Conv2d-97          [-1, 256, 14, 14]         589,824
           Conv2d-98          [-1, 256, 14, 14]         589,824
      BatchNorm2d-99          [-1, 256, 14, 14]             512
     BatchNorm2d-100          [-1, 256, 14, 14]             512
            ReLU-101          [-1, 256, 14, 14]               0
            ReLU-102          [-1, 256, 14, 14]               0
      BasicBlock-103          [-1, 256, 14, 14]               0
      BasicBlock-104          [-1, 256, 14, 14]               0
          Conv2d-105            [-1, 512, 7, 7]       1,179,648
          Conv2d-106            [-1, 512, 7, 7]       1,179,648
     BatchNorm2d-107            [-1, 512, 7, 7]           1,024
     BatchNorm2d-108            [-1, 512, 7, 7]           1,024
            ReLU-109            [-1, 512, 7, 7]               0
            ReLU-110            [-1, 512, 7, 7]               0
          Conv2d-111            [-1, 512, 7, 7]       2,359,296
          Conv2d-112            [-1, 512, 7, 7]       2,359,296
     BatchNorm2d-113            [-1, 512, 7, 7]           1,024
     BatchNorm2d-114            [-1, 512, 7, 7]           1,024
          Conv2d-115            [-1, 512, 7, 7]         131,072
          Conv2d-116            [-1, 512, 7, 7]         131,072
     BatchNorm2d-117            [-1, 512, 7, 7]           1,024
     BatchNorm2d-118            [-1, 512, 7, 7]           1,024
            ReLU-119            [-1, 512, 7, 7]               0
            ReLU-120            [-1, 512, 7, 7]               0
      BasicBlock-121            [-1, 512, 7, 7]               0
      BasicBlock-122            [-1, 512, 7, 7]               0
          Conv2d-123            [-1, 512, 7, 7]       2,359,296
          Conv2d-124            [-1, 512, 7, 7]       2,359,296
     BatchNorm2d-125            [-1, 512, 7, 7]           1,024
     BatchNorm2d-126            [-1, 512, 7, 7]           1,024
            ReLU-127            [-1, 512, 7, 7]               0
            ReLU-128            [-1, 512, 7, 7]               0
          Conv2d-129            [-1, 512, 7, 7]       2,359,296
          Conv2d-130            [-1, 512, 7, 7]       2,359,296
     BatchNorm2d-131            [-1, 512, 7, 7]           1,024
     BatchNorm2d-132            [-1, 512, 7, 7]           1,024
            ReLU-133            [-1, 512, 7, 7]               0
            ReLU-134            [-1, 512, 7, 7]               0
      BasicBlock-135            [-1, 512, 7, 7]               0
      BasicBlock-136            [-1, 512, 7, 7]               0
          Conv2d-137            [-1, 512, 7, 7]         262,656
            ReLU-138            [-1, 512, 7, 7]               0
        Upsample-139          [-1, 512, 14, 14]               0
          Conv2d-140          [-1, 256, 14, 14]          65,792
            ReLU-141          [-1, 256, 14, 14]               0
          Conv2d-142          [-1, 512, 14, 14]       3,539,456
            ReLU-143          [-1, 512, 14, 14]               0
        Upsample-144          [-1, 512, 28, 28]               0
          Conv2d-145          [-1, 128, 28, 28]          16,512
            ReLU-146          [-1, 128, 28, 28]               0
          Conv2d-147          [-1, 256, 28, 28]       1,474,816
            ReLU-148          [-1, 256, 28, 28]               0
        Upsample-149          [-1, 256, 56, 56]               0
          Conv2d-150           [-1, 64, 56, 56]           4,160
            ReLU-151           [-1, 64, 56, 56]               0
          Conv2d-152          [-1, 256, 56, 56]         737,536
            ReLU-153          [-1, 256, 56, 56]               0
        Upsample-154        [-1, 256, 112, 112]               0
          Conv2d-155         [-1, 64, 112, 112]           4,160
            ReLU-156         [-1, 64, 112, 112]               0
          Conv2d-157        [-1, 128, 112, 112]         368,768
            ReLU-158        [-1, 128, 112, 112]               0
        Upsample-159        [-1, 128, 224, 224]               0
          Conv2d-160         [-1, 64, 224, 224]         110,656
            ReLU-161         [-1, 64, 224, 224]               0
          Conv2d-162          [-1, 2, 224, 224]             130
================================================================
Total params: 28,976,386
Trainable params: 28,976,386
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.57
Forward/backward pass size (MB): 416.12
Params size (MB): 110.54
Estimated Total Size (MB): 527.23
----------------------------------------------------------------
ResNetUNet(
  (base_model): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Linear(in_features=512, out_features=1000, bias=True)
  )
  (layer0): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (layer0_1x1): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): ReLU(inplace=True)
  )
  (layer1): Sequential(
    (0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (layer1_1x1): Sequential(
    (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    (1): ReLU(inplace=True)
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2_1x1): Sequential(
    (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): ReLU(inplace=True)
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3_1x1): Sequential(
    (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (1): ReLU(inplace=True)
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4_1x1): Sequential(
    (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
    (1): ReLU(inplace=True)
  )
  (upsample): Upsample(scale_factor=2.0, mode=bilinear)
  (conv_up3): Sequential(
    (0): Conv2d(768, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_up2): Sequential(
    (0): Conv2d(640, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_up1): Sequential(
    (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_up0): Sequential(
    (0): Conv2d(320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_original_size0): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_original_size1): Sequential(
    (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_original_size2): Sequential(
    (0): Conv2d(192, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace=True)
  )
  (conv_last): Conv2d(64, 2, kernel_size=(1, 1), stride=(1, 1))
)
Start training now...
Idx:  4
Idx:  7
Idx:  9
Idx:  2
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  5
Idx:  0
Idx:  8
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 2.582262, dice: 1.086470, loss: 1.834366
Idx:  1
Idx:  8
Idx:  6
Idx:  3
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  5
Idx:  4
Idx:  2
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 1.248156, dice: 0.937158, loss: 1.092657
Idx:  9
Idx:  1
Idx:  3
Idx:  4
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  0
Idx:  2
Idx:  6
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.525400, dice: 0.462499, loss: 0.493949
Idx:  7
Idx:  6
Idx:  1
Idx:  3
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  4
Idx:  5
Idx:  9
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 1.021803, dice: 0.333532, loss: 0.677667
Idx:  6
Idx:  5
Idx:  9
Idx:  3
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  8
Idx:  1
Idx:  7
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.651235, dice: 0.378121, loss: 0.514678
Idx:  0
Idx:  1
Idx:  8
Idx:  3
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  4
Idx:  9
Idx:  6
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.534293, dice: 0.351935, loss: 0.443114
Idx:  0
Idx:  4
Idx:  3
Idx:  2
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  9
Idx:  5
Idx:  7
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.329737, dice: 0.281158, loss: 0.305447
Idx:  2
Idx:  8
Idx:  5
Idx:  6
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  3
Idx:  0
Idx:  7
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.189210, dice: 0.213155, loss: 0.201183
Idx:  2
Idx:  8
Idx:  6
Idx:  1
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  4
Idx:  0
Idx:  7
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.140372, dice: 0.175670, loss: 0.158021
Idx:  0
Idx:  6
Idx:  7
Idx:  1
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  3
Idx:  9
Idx:  2
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.105753, dice: 0.106840, loss: 0.106297
Idx:  4
Idx:  0
Idx:  3
Idx:  7
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  9
Idx:  5
Idx:  2
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.067585, dice: 0.069833, loss: 0.068709
Idx:  4
Idx:  6
Idx:  8
Idx:  7
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  9
Idx:  2
Idx:  0
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.066141, dice: 0.057034, loss: 0.061588
Idx:  1
Idx:  7
Idx:  6
Idx:  9
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  8
Idx:  2
Idx:  4
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.052470, dice: 0.044525, loss: 0.048497
Idx:  3
Idx:  0
Idx:  9
Idx:  8
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  2
Idx:  5
Idx:  6
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.040038, dice: 0.033389, loss: 0.036713
Idx:  8
Idx:  7
Idx:  0
Idx:  1
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  3
Idx:  4
Idx:  5
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.054492, dice: 0.034802, loss: 0.044647
Idx:  1
Idx:  7
Idx:  3
Idx:  0
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  5
Idx:  2
Idx:  9
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.035637, dice: 0.026526, loss: 0.031082
Idx:  6
Idx:  1
Idx:  5
Idx:  8
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  0
Idx:  3
Idx:  7
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.030341, dice: 0.022482, loss: 0.026412
Idx:  5
Idx:  0
Idx:  3
Idx:  7
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  4
Idx:  9
Idx:  6
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.024526, dice: 0.019148, loss: 0.021837
Idx:  0
Idx:  2
Idx:  7
Idx:  1
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  6
Idx:  4
Idx:  3
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.021494, dice: 0.017076, loss: 0.019285
Idx:  9
Idx:  1
Idx:  8
Idx:  3
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  6
Idx:  0
Idx:  2
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.019389, dice: 0.015784, loss: 0.017586
Idx:  2
Idx:  4
Idx:  9
Idx:  3
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  7
Idx:  0
Idx:  8
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.018093, dice: 0.014544, loss: 0.016319
Idx:  6
Idx:  9
Idx:  4
Idx:  3
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  5
Idx:  8
Idx:  0
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.023312, dice: 0.015617, loss: 0.019464
Idx:  2
Idx:  3
Idx:  8
Idx:  6
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  1
Idx:  9
Idx:  0
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.014200, dice: 0.011708, loss: 0.012954
Idx:  1
Idx:  7
Idx:  9
Idx:  6
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  2
Idx:  3
Idx:  5
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.015417, dice: 0.011763, loss: 0.013590
Idx:  9
Idx:  4
Idx:  0
Idx:  2
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  3
Idx:  8
Idx:  5
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.025000, dice: 0.015300, loss: 0.020150
Idx:  0
Idx:  9
Idx:  8
Idx:  4
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  1
Idx:  6
Idx:  7
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.015197, dice: 0.011540, loss: 0.013369
Idx:  0
Idx:  3
Idx:  7
Idx:  6
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  9
Idx:  8
Idx:  1
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.015093, dice: 0.011291, loss: 0.013192
Idx:  2
Idx:  1
Idx:  7
Idx:  5
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  9
Idx:  6
Idx:  0
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.017205, dice: 0.012377, loss: 0.014791
Idx:  9
Idx:  7
Idx:  4
Idx:  6
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  5
Idx:  1
Idx:  2
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.022323, dice: 0.014286, loss: 0.018304
Idx:  9
Idx:  1
Idx:  2
Idx:  7
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  8
Idx:  4
Idx:  5
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.028402, dice: 0.016530, loss: 0.022466
Idx:  2
Idx:  7
Idx:  9
Idx:  3
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  5
Idx:  0
Idx:  1
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.040409, dice: 0.021585, loss: 0.030997
Idx:  2
Idx:  1
Idx:  6
Idx:  9
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  5
Idx:  7
Idx:  3
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.031876, dice: 0.018782, loss: 0.025329
Idx:  7
Idx:  0
Idx:  6
Idx:  1
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  9
Idx:  3
Idx:  8
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.026088, dice: 0.017397, loss: 0.021743
Idx:  3
Idx:  4
Idx:  0
Idx:  1
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  5
Idx:  6
Idx:  8
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.018482, dice: 0.014909, loss: 0.016696
Epoch    33: reducing learning rate of group 0 to 5.0000e-04.
Idx:  2
Idx:  4
Idx:  8
Idx:  9
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  3
Idx:  7
Idx:  6
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.020236, dice: 0.015760, loss: 0.017998
Idx:  9
Idx:  0
Idx:  7
Idx:  5
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  6
Idx:  3
Idx:  4
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.021100, dice: 0.016084, loss: 0.018592
Idx:  7
Idx:  0
Idx:  1
Idx:  3
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  2
Idx:  4
Idx:  9
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.015266, dice: 0.013478, loss: 0.014372
Idx:  5
Idx:  9
Idx:  4
Idx:  3
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  7
Idx:  6
Idx:  8
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.017553, dice: 0.014581, loss: 0.016067
Idx:  8
Idx:  7
Idx:  2
Idx:  3
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  9
Idx:  1
Idx:  5
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.012850, dice: 0.011822, loss: 0.012336
Idx:  9
Idx:  3
Idx:  5
Idx:  8
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  4
Idx:  0
Idx:  2
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.015672, dice: 0.013532, loss: 0.014602
Idx:  0
Idx:  5
Idx:  2
Idx:  9
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  6
Idx:  1
Idx:  8
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.012095, dice: 0.011531, loss: 0.011813
Idx:  8
Idx:  2
Idx:  4
Idx:  9
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  6
Idx:  5
Idx:  0
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.013654, dice: 0.012215, loss: 0.012934
Idx:  1
Idx:  7
Idx:  3
Idx:  9
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  4
Idx:  0
Idx:  5
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.012268, dice: 0.011200, loss: 0.011734
Idx:  0
Idx:  8
Idx:  4
Idx:  6
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  5
Idx:  9
Idx:  7
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.011592, dice: 0.010909, loss: 0.011251
Idx:  4
Idx:  6
Idx:  7
Idx:  0
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  8
Idx:  9
Idx:  5
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.011746, dice: 0.010710, loss: 0.011228
Idx:  5
Idx:  7
Idx:  3
Idx:  4
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  2
Idx:  1
Idx:  8
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010512, dice: 0.009691, loss: 0.010102
Idx:  3
Idx:  4
Idx:  0
Idx:  9
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  6
Idx:  2
Idx:  1
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010119, dice: 0.009617, loss: 0.009868
Idx:  1
Idx:  2
Idx:  8
Idx:  6
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  7
Idx:  3
Idx:  0
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010930, dice: 0.009593, loss: 0.010261
Idx:  9
Idx:  0
Idx:  4
Idx:  7
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  8
Idx:  6
Idx:  2
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.012311, dice: 0.010209, loss: 0.011260
Idx:  7
Idx:  5
Idx:  1
Idx:  2
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  3
Idx:  9
Idx:  6
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.012036, dice: 0.010007, loss: 0.011022
Idx:  7
Idx:  2
Idx:  4
Idx:  9
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  5
Idx:  0
Idx:  3
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.011053, dice: 0.009225, loss: 0.010139
Idx:  9
Idx:  2
Idx:  1
Idx:  4
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  0
Idx:  7
Idx:  3
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010857, dice: 0.009313, loss: 0.010085
Idx:  3
Idx:  5
Idx:  2
Idx:  9
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  8
Idx:  7
Idx:  1
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010610, dice: 0.008936, loss: 0.009773
Idx:  7
Idx:  1
Idx:  2
Idx:  8
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  0
Idx:  5
Idx:  3
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010221, dice: 0.008755, loss: 0.009488
Idx:  6
Idx:  3
Idx:  1
Idx:  7
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  2
Idx:  4
Idx:  0
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009817, dice: 0.008506, loss: 0.009162
Idx:  1
Idx:  6
Idx:  4
Idx:  8
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  0
Idx:  9
Idx:  2
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009393, dice: 0.008161, loss: 0.008777
Idx:  6
Idx:  0
Idx:  1
Idx:  7
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  5
Idx:  8
Idx:  3
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009018, dice: 0.007872, loss: 0.008445
Idx:  5
Idx:  2
Idx:  1
Idx:  3
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  6
Idx:  4
Idx:  7
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.008565, dice: 0.007544, loss: 0.008054
Idx:  6
Idx:  1
Idx:  0
Idx:  7
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  2
Idx:  5
Idx:  8
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.008974, dice: 0.007726, loss: 0.008350
Idx:  1
Idx:  2
Idx:  6
Idx:  8
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  9
Idx:  5
Idx:  3
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009653, dice: 0.007904, loss: 0.008779
Idx:  9
Idx:  2
Idx:  1
Idx:  3
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  7
Idx:  8
Idx:  6
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010871, dice: 0.008422, loss: 0.009647
Idx:  6
Idx:  5
Idx:  9
Idx:  2
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  3
Idx:  0
Idx:  4
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009918, dice: 0.007921, loss: 0.008920
Idx:  0
Idx:  8
Idx:  5
Idx:  3
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  1
Idx:  4
Idx:  9
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009112, dice: 0.007600, loss: 0.008356
Idx:  0
Idx:  9
Idx:  7
Idx:  4
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  6
Idx:  5
Idx:  3
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009118, dice: 0.007578, loss: 0.008348
Idx:  7
Idx:  3
Idx:  4
Idx:  9
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  0
Idx:  6
Idx:  8
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009024, dice: 0.007520, loss: 0.008272
Idx:  0
Idx:  3
Idx:  5
Idx:  4
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  6
Idx:  9
Idx:  8
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009108, dice: 0.007693, loss: 0.008400
Idx:  9
Idx:  8
Idx:  1
Idx:  2
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  3
Idx:  6
Idx:  0
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009160, dice: 0.007530, loss: 0.008345
Idx:  1
Idx:  5
Idx:  2
Idx:  0
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  7
Idx:  3
Idx:  4
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.013491, dice: 0.009466, loss: 0.011478
Idx:  7
Idx:  3
Idx:  1
Idx:  0
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  8
Idx:  9
Idx:  4
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009553, dice: 0.007821, loss: 0.008687
Idx:  9
Idx:  2
Idx:  5
Idx:  7
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  4
Idx:  0
Idx:  8
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010576, dice: 0.008295, loss: 0.009435
Idx:  0
Idx:  5
Idx:  2
Idx:  1
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  4
Idx:  3
Idx:  7
Idx:  9
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.011699, dice: 0.008861, loss: 0.010280
Idx:  6
Idx:  4
Idx:  2
Idx:  9
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  8
Idx:  0
Idx:  3
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.012977, dice: 0.009192, loss: 0.011084
Idx:  0
Idx:  2
Idx:  1
Idx:  7
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  4
Idx:  5
Idx:  8
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.013474, dice: 0.009852, loss: 0.011663
Idx:  0
Idx:  1
Idx:  4
Idx:  3
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  2
Idx:  9
Idx:  7
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.015294, dice: 0.010294, loss: 0.012794
Idx:  9
Idx:  6
Idx:  7
Idx:  4
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  8
Idx:  5
Idx:  0
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.014369, dice: 0.010312, loss: 0.012340
Idx:  7
Idx:  8
Idx:  1
Idx:  0
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  9
Idx:  3
Idx:  2
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.013791, dice: 0.010057, loss: 0.011924
Idx:  1
Idx:  0
Idx:  9
Idx:  7
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  5
Idx:  8
Idx:  4
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.016864, dice: 0.011616, loss: 0.014240
Idx:  1
Idx:  7
Idx:  5
Idx:  2
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  6
Idx:  4
Idx:  3
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.018827, dice: 0.012271, loss: 0.015549
Epoch    77: reducing learning rate of group 0 to 2.5000e-04.
Idx:  7
Idx:  9
Idx:  6
Idx:  8
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  4
Idx:  2
Idx:  0
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.016161, dice: 0.011839, loss: 0.014000
Idx:  3
Idx:  2
Idx:  9
Idx:  4
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  5
Idx:  1
Idx:  7
Idx:  0
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010750, dice: 0.009333, loss: 0.010041
Idx:  5
Idx:  2
Idx:  9
Idx:  3
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  7
Idx:  4
Idx:  1
Idx:  6
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.013507, dice: 0.010611, loss: 0.012059
Idx:  2
Idx:  7
Idx:  6
Idx:  4
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  1
Idx:  8
Idx:  9
Idx:  5
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.008583, dice: 0.008287, loss: 0.008435
Idx:  7
Idx:  1
Idx:  2
Idx:  6
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  8
Idx:  5
Idx:  9
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.011362, dice: 0.009895, loss: 0.010628
Idx:  3
Idx:  1
Idx:  5
Idx:  2
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  6
Idx:  9
Idx:  7
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.010089, dice: 0.009099, loss: 0.009594
Idx:  1
Idx:  2
Idx:  8
Idx:  6
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  3
Idx:  7
Idx:  0
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009674, dice: 0.008795, loss: 0.009234
Idx:  9
Idx:  0
Idx:  2
Idx:  5
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  8
Idx:  7
Idx:  6
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009548, dice: 0.008730, loss: 0.009139
Idx:  9
Idx:  2
Idx:  5
Idx:  7
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  6
Idx:  1
Idx:  4
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009004, dice: 0.008462, loss: 0.008733
Idx:  0
Idx:  7
Idx:  2
Idx:  8
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  9
Idx:  5
Idx:  6
Idx:  4
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009543, dice: 0.008648, loss: 0.009095
Idx:  3
Idx:  4
Idx:  0
Idx:  8
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  2
Idx:  1
Idx:  7
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.008639, dice: 0.008038, loss: 0.008339
Epoch    88: reducing learning rate of group 0 to 1.2500e-04.
Idx:  5
Idx:  0
Idx:  6
Idx:  4
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  7
Idx:  1
Idx:  9
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.009135, dice: 0.008475, loss: 0.008805
Idx:  1
Idx:  5
Idx:  6
Idx:  4
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  0
Idx:  3
Idx:  7
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.008091, dice: 0.007750, loss: 0.007920
Idx:  5
Idx:  3
Idx:  7
Idx:  6
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  9
Idx:  1
Idx:  0
Idx:  4
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.008475, dice: 0.007820, loss: 0.008147
Idx:  9
Idx:  7
Idx:  2
Idx:  4
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  8
Idx:  0
Idx:  3
Idx:  1
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007946, dice: 0.007551, loss: 0.007749
Idx:  0
Idx:  9
Idx:  5
Idx:  8
Idx:  6
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  2
Idx:  3
Idx:  7
Idx:  4
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007864, dice: 0.007569, loss: 0.007717
Idx:  4
Idx:  2
Idx:  8
Idx:  5
Idx:  7
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  3
Idx:  9
Idx:  1
Idx:  6
Idx:  0
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007771, dice: 0.007462, loss: 0.007617
Idx:  8
Idx:  5
Idx:  6
Idx:  9
Idx:  2
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  4
Idx:  1
Idx:  7
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007332, dice: 0.007111, loss: 0.007221
Idx:  1
Idx:  2
Idx:  5
Idx:  0
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  6
Idx:  7
Idx:  9
Idx:  4
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007785, dice: 0.007324, loss: 0.007555
Idx:  8
Idx:  1
Idx:  5
Idx:  6
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  2
Idx:  4
Idx:  7
Idx:  9
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007243, dice: 0.007006, loss: 0.007125
Idx:  6
Idx:  4
Idx:  2
Idx:  1
Idx:  8
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  3
Idx:  9
Idx:  7
Idx:  5
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007406, dice: 0.007084, loss: 0.007245
Idx:  6
Idx:  9
Idx:  8
Idx:  4
Idx:  1
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
Idx:  0
Idx:  7
Idx:  2
Idx:  5
Idx:  3
pred shape torch.Size([5, 2, 448, 448])
target shape torch.Size([5, 2, 448, 448])
training: bce: 0.007270, dice: 0.006957, loss: 0.007113
